{"version":3,"sources":["../src/object.js"],"names":["deQuote","str","replace","reQuote","res","JSON","parse","prefixObj","obj","elem","Object","keys","push","isArray","Array","isString","undefined","isNumber","isNaN","isFunction","hasOwnProperty","module","exports"],"mappings":"AACA;AAEA,MAAMA,OAAO,GAAIC,GAAD,IAAyBA,GAAG,CAACC,OAAJ,CAAY,KAAZ,EAAmB,KAAnB,CAAzC;;AAEA,MAAMC,OAAO,GAAIF,GAAD,IAAyC;AACvD,MAAIG,GAAW,GAAGH,GAAG,CAACC,OAAJ,CAAY,KAAZ,EAAmB,MAAnB,CAAlB;AACAE,EAAAA,GAAG,GAAGA,GAAG,CAACF,OAAJ,CAAY,KAAZ,EAAmB,KAAnB,CAAN;AACAE,EAAAA,GAAG,GAAGA,GAAG,CAACF,OAAJ,CAAY,MAAZ,EAAoB,GAApB,CAAN;AACA,SAAOG,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAP;AACD,CALD;;AAOA,MAAMG,SAAS,GAAG,CAACN,GAAD,EAAcO,GAAd,KAA6D;AAC7E,QAAMJ,GAAkB,GAAG,EAA3B;;AACA,OAAK,MAAMK;AAAI;AAAf,KAA+BC,MAAM,CAACC,IAAP,CAAYH,GAAZ,CAA/B,EAAiD;AAC/CJ,IAAAA,GAAG,CAACQ,IAAJ,CAASX,GAAG,GAAGQ,IAAf;;AACA,QAAID,GAAG,CAACC,IAAD,CAAH,KAAc,IAAlB,EAAwB;AACtBL,MAAAA,GAAG,CAACQ,IAAJ,CAASJ,GAAG,CAACC,IAAD,CAAZ;AACD;AACF;;AACD,SAAOL,GAAP;AACD,CATD;;AAWA,MAAMS,OAAO,GAAIL,GAAD,IAAiC;AAC/C,SAAOM,KAAK,CAACD,OAAN,CAAcL,GAAd,CAAP;AACD,CAFD;;AAIA,MAAMO,QAAQ,GAAIP,GAAD,IAAiC;AAChD,SAAOA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKQ,SAAxB,IAAqC,OAAOR,GAAP,KAAe,QAA3D;AACD,CAFD;;AAIA,MAAMS,QAAQ,GAAIT,GAAD,IAAiC;AAChD,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAACU,KAAK,CAACV,GAAG,GAAG,CAAP,CAAxC;AACD,CAFD;;AAIA,MAAMW,UAAU,GAAIX,GAAD,IAAiC;AAClD,SACEA,GAAG,KAAK,IAAR,IACC,OAAOA,GAAP,KAAe,QAAf,IACDA,GAAG,CAACY,cAAJ,CAAmB,aAAnB,CADC,IAEDZ,GAAG,CAACY,cAAJ,CAAmB,MAAnB,CAFC,IAGDZ,GAAG,CAACY,cAAJ,CAAmB,OAAnB,CAJA,IAIiC,OAAOZ,GAAP,KAAe,UALlD;AAOD,CARD;;AAUAa,MAAM,CAACC,OAAP,GAAiB;AACftB,EAAAA,OADe;AAEfG,EAAAA,OAFe;AAGfI,EAAAA,SAHe;AAIfM,EAAAA,OAJe;AAKfE,EAAAA,QALe;AAMfE,EAAAA,QANe;AAOfE,EAAAA;AAPe,CAAjB","sourcesContent":["// @flow\r\n// @format\r\n\r\nconst deQuote = (str: string): string => str.replace(/\\\"/g, \"~!~\");\r\n\r\nconst reQuote = (str: string): {[key:string]: string} => {\r\n  let res: string = str.replace(/\\\\/g, \"\\\\\\\\\");\r\n  res = res.replace(/\\\"/g, '\\\\\"');\r\n  res = res.replace(/~!~/g, '\"');\r\n  return JSON.parse(res);\r\n};\r\n\r\nconst prefixObj = (str: string, obj: {[key:string]: string}): Array<string> => {\r\n  const res: Array<string> = [];\r\n  for (const elem/*: string*/ of Object.keys(obj)) {\r\n    res.push(str + elem);\r\n    if (obj[elem] !== null) {\r\n      res.push(obj[elem]);\r\n    }\r\n  }\r\n  return res;\r\n};\r\n\r\nconst isArray = (obj: mixed): boolean %checks => {\r\n  return Array.isArray(obj);\r\n};\r\n\r\nconst isString = (obj: mixed): boolean %checks => {\r\n  return obj !== null && obj !== undefined && typeof obj === \"string\";\r\n};\r\n\r\nconst isNumber = (obj: mixed): boolean %checks => {\r\n  return typeof obj === \"number\" && !isNaN(obj - 0);\r\n};\r\n\r\nconst isFunction = (obj: mixed): boolean %checks => {\r\n  return (\r\n    obj !== null &&\r\n    (typeof obj === 'object' &&\r\n    obj.hasOwnProperty(\"constructor\") &&\r\n    obj.hasOwnProperty(\"call\") &&\r\n    obj.hasOwnProperty(\"apply\")) || (typeof obj === 'function')\r\n  );\r\n};\r\n\r\nmodule.exports = {\r\n  deQuote,\r\n  reQuote,\r\n  prefixObj,\r\n  isArray,\r\n  isString,\r\n  isNumber,\r\n  isFunction\r\n};\r\n"],"file":"object.js"}