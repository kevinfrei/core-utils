{"version":3,"sources":["../src/ClientRPC.js"],"names":["FTON","require","MakeTypedMessage","theMessage","msg","type","func","args","typecheck","result","undefined","InvokeFunc","handler","reply","get","ClientRPC","message","typedMsg","Array","isArray","module","exports"],"mappings":"AACA;AACA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAIA,MAAMC,gBAAgB,GAAIC,UAAD,IAA2C;AAClE,QAAMC,GAAG,GAAGD,UAAZ;AACA,MAAI,CAACC,GAAL,EAAU;AAEV,MAAI,CAACA,GAAG,CAACC,IAAT,EAAe,OAAO,IAAP;AACf,QAAMA,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACA,MAAIA,IAAI,KAAK,KAAb,EAAoB;AAEpB,MAAI,CAACD,GAAG,CAACE,IAAT,EAAe;AACf,QAAMA,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACA,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAE9B,MAAIC,IAAc,GAAG,IAArB;AACA,MAAIH,GAAG,CAACG,IAAR,EAAcA,IAAI,GAAGP,IAAI,CAACQ,SAAL,CAAeJ,GAAG,CAACG,IAAnB,CAAP,CAboD,CAanB;;AAE/C,MAAIH,GAAG,CAACK,MAAJ,KAAeC,SAAnB,EAA8B;AAC5B,WAAO;AACLJ,MAAAA,IADK;AAELC,MAAAA;AAFK,KAAP;AAID;;AACD,MAAI,OAAOH,GAAG,CAACK,MAAX,KAAsB,QAA1B,EAAoC,OAAO,IAAP;AACpC,SAAO;AAAEH,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcE,IAAAA,MAAM,EAAEL,GAAG,CAACK;AAA1B,GAAP;AACD,CAvBD;;AAyBA,MAAME,UAAU,GAAG,CACjBL,IADiB,EAEjBC,IAFiB,EAGjBK,OAHiB,EAIjBH,MAJiB,KAKd;AACH,MAAI,CAACA,MAAL,EAAa;AACXH,IAAAA,IAAI,CAAC,GAAGC,IAAJ,CAAJ;AACD,GAFD,MAEO;AACL,UAAMM,KAAgB,GAAGD,OAAO,CAACE,GAAR,CAAYL,MAAZ,CAAzB;;AACA,QAAII,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACP,IAAI,CAAC,GAAGC,IAAJ,CAAL,CAAL;AACD;AACF;AACF,CAdD;;AAgBA,MAAMQ,SAAS,GAAG,CAACC,OAAD,EAAoBJ,OAApB,KAAsD;AACtE;AACA;AACA,QAAMK,QAAQ,GAAGf,gBAAgB,CAACc,OAAD,CAAjC;;AACA,MAAI,CAACC,QAAL,EAAe;AACb;AACD;;AACD,QAAMX,IAAe,GAAGM,OAAO,CAACE,GAAR,CAAYG,QAAQ,CAACX,IAArB,CAAxB;;AACA,MAAI,CAACA,IAAL,EAAW;AACT;AACD;;AACD,MAAIY,KAAK,CAACC,OAAN,CAAcF,QAAQ,CAACV,IAAvB,CAAJ,EAAkC;AAChCI,IAAAA,UAAU,CAACL,IAAD,EAAOW,QAAQ,CAACV,IAAhB,EAAsBK,OAAtB,EAA+BK,QAAQ,CAACR,MAAxC,CAAV;AACD,GAFD,MAEO,IAAIQ,QAAQ,CAACV,IAAb,EAAmB;AACxBI,IAAAA,UAAU,CAACL,IAAD,EAAO,CAACW,QAAQ,CAACV,IAAV,CAAP,EAAwBK,OAAxB,EAAiCK,QAAQ,CAACR,MAA1C,CAAV;AACD,GAFM,MAEA;AACLE,IAAAA,UAAU,CAACL,IAAD,EAAO,EAAP,EAAWM,OAAX,EAAoBK,QAAQ,CAACR,MAA7B,CAAV;AACD;AACF,CAlBD;;AAoBAW,MAAM,CAACC,OAAP,GAAiBN,SAAjB","sourcesContent":["//@flow\n//@format\n'use strict';\n\nconst FTON = require('./FTON');\n\nimport type { FTONData, rpcMessageType, rpcHandlerType } from './index';\n\nconst MakeTypedMessage = (theMessage: FTONData): ?rpcMessageType => {\n  const msg = theMessage;\n  if (!msg) return;\n\n  if (!msg.type) return null;\n  const type = msg.type;\n  if (type !== 'rpc') return;\n\n  if (!msg.func) return;\n  const func = msg.func;\n  if (typeof func !== 'string') return;\n\n  let args: FTONData = null;\n  if (msg.args) args = FTON.typecheck(msg.args); // WTF is wrong with you, Flow?\n\n  if (msg.result === undefined) {\n    return {\n      func,\n      args\n    };\n  }\n  if (typeof msg.result !== 'string') return null;\n  return { func, args, result: msg.result };\n};\n\nconst InvokeFunc = (\n  func: Function,\n  args: Array<any>,\n  handler: rpcHandlerType,\n  result: ?string\n) => {\n  if (!result) {\n    func(...args);\n  } else {\n    const reply: ?Function = handler.get(result);\n    if (reply) {\n      reply(func(...args));\n    }\n  }\n};\n\nconst ClientRPC = (message: FTONData, handler: rpcHandlerType): void => {\n  // Validate the message, then call the function\n  // by reflecting on the handler\n  const typedMsg = MakeTypedMessage(message);\n  if (!typedMsg) {\n    return;\n  }\n  const func: ?Function = handler.get(typedMsg.func);\n  if (!func) {\n    return;\n  }\n  if (Array.isArray(typedMsg.args)) {\n    InvokeFunc(func, typedMsg.args, handler, typedMsg.result);\n  } else if (typedMsg.args) {\n    InvokeFunc(func, [typedMsg.args], handler, typedMsg.result);\n  } else {\n    InvokeFunc(func, [], handler, typedMsg.result);\n  }\n};\n\nmodule.exports = ClientRPC;\n"],"file":"ClientRPC.js"}