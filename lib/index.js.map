{"version":3,"sources":["../src/index.js"],"names":["FTON","require","ObjUtil","Logger","SeqNum","ClientRPC","module","exports"],"mappings":"AACA;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,aAAD,CAAzB;;AAwBAK,MAAM,CAACC,OAAP,GAAiB;AACfP,EAAAA,IADe;AAEfE,EAAAA,OAFe;AAGfC,EAAAA,MAHe;AAIfC,EAAAA,MAJe;AAKfC,EAAAA;AALe,CAAjB","sourcesContent":["// @flow\n// @format\n\nconst FTON = require('./FTON');\nconst ObjUtil = require('./object');\nconst Logger = require('./Logger');\nconst SeqNum = require('./SeqNum');\nconst ClientRPC = require('./ClientRPC');\n\nexport type FTONData = string\n  | number\n  | boolean\n  | null\n  | FTONObject\n  | FTONArray;\nexport type FTONObject = { [key: string]: FTONData };\nexport type FTONArray = Array<FTONData>;\n\nexport type LoggerFuncType = {\n  (number, string): void,\n  getLimit?: () => number,\n  setLimit?: (number) => void\n};\n\nexport type rpcMessageType = {\n  func: string,\n  args: FTONData,\n  result?: string\n};\n\nexport type rpcHandlerType = Map<string, Function>;\nmodule.exports = {\n  FTON,\n  ObjUtil,\n  Logger,\n  SeqNum,\n  ClientRPC\n};\n"],"file":"index.js"}