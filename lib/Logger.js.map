{"version":3,"sources":["../src/Logger.js"],"names":["limit","logger","level","data","console","log","getLimit","setLimit","newLimit","module","exports"],"mappings":"AACA;AAIA,IAAIA,KAAK,GAAG,CAAZ;;AAEA,IAAIC,MAAqB,GAAG,CAACC,KAAD,EAAgB,GAAGC,IAAnB,KAAwC;AAClE,MAAID,KAAK,IAAIF,KAAb,EAAoB;AAClBI,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAGF,IAAf;AACD;AACF,CAJD;;AAMAF,MAAM,CAACK,QAAP,GAAkB,MAAcN,KAAhC;;AACAC,MAAM,CAACM,QAAP,GAAmBC,QAAD,IAAsB;AACtCR,EAAAA,KAAK,GAAGQ,QAAR;AACD,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiBT,MAAjB","sourcesContent":["// @flow\n// @format\n\nimport type { LoggerFuncType } from './index';\n\nlet limit = 1;\n\nlet logger:LoggerFuncType = (level: number, ...data: Array<any>) => {\n  if (level <= limit) {\n    console.log(...data);\n  }\n};\n\nlogger.getLimit = (): number => limit;\nlogger.setLimit = (newLimit: number) => {\n  limit = newLimit;\n};\n\nmodule.exports = logger;\n"],"file":"Logger.js"}